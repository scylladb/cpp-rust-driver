# -*- coding: utf-8 -*-
import os
import re
import sys
import warnings
from datetime import date

from sphinx_scylladb_theme.utils import multiversion_regex_builder

sys.path.insert(0, os.path.abspath(".."))

# -- Global variables

# Builds documentation for the following tags and branches.
TAGS = []
BRANCHES = [
    "master",
]
# Sets the latest version.
LATEST_VERSION = "master"
# Set which versions are not released yet.
UNSTABLE_VERSIONS = ["master"]
# Set which versions are deprecated
DEPRECATED_VERSIONS = [""]
# Sets custom build.
FLAGS = ["theme"]

# -- General configuration ------------------------------------------

# Add any Sphinx extension module names here, as strings.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.todo",
    "sphinx.ext.mathjax",
    "sphinx.ext.githubpages",
    "sphinx.ext.extlinks",
    "sphinx_sitemap",
    "sphinx_scylladb_theme",
    "sphinx_multiversion",  # optional
    "myst_parser",  # optional
    'breathe',
    'sphinx_scylladb_markdown',
]

# The suffix(es) of source filenames.
source_suffix = [".rst", ".md"]

# The master toctree document.
master_doc = "contents"

# General information about the project.
project = "ScyllaDB CPP-Rust Driver"
copyright = str(date.today().year) + ", ScyllaDB. All rights reserved."
author = "ScyllaDB Project Contributors"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# List of substitutions
rst_prolog = """
.. |rst| replace:: restructuredText
"""

# -- Options for myst parser ----------------------------------------
myst_enable_extensions = ["colon_fence"]

# -- Options for not found extension --------------------------------

# Template used to render the 404.html generated by this extension.
notfound_template = "404.html"

# Prefix added to all the URLs generated in the 404 page.
notfound_urls_prefix = ""

# -- Options for sitemap extension ----------------------------------

sitemap_url_scheme = "/stable/{link}"

# -- Options for multiversion extension -----------------------------

# Whitelist pattern for tags
smv_tag_whitelist = multiversion_regex_builder(TAGS)
# Whitelist pattern for branches
smv_branch_whitelist = multiversion_regex_builder(BRANCHES)
# Defines which version is considered to be the latest stable version.
smv_latest_version = LATEST_VERSION
# Defines the new name for the latest version.
smv_rename_latest_version = "stable"
# Whitelist pattern for remotes (set to None to use local branches only)
smv_remote_whitelist = r"^origin$"
# Pattern for released versions
smv_released_pattern = r"^tags/.*$"
# Format for versioned output directories inside the build directory
smv_outputdir_format = "{ref.name}"
# -- Options for HTML output ----------------------------------------


# -- Options for Doxygen (API Reference)
breathe_projects = {
	'API': "../../doxygen/xml/"
}
breathe_default_project = 'API'
breathe_default_members = ('members', 'undoc-members')

# Autogenerate API reference
def _generate_structs(outdir, structs, project):
    """Write structs docs in the designated outdir folder"""
    for obj in structs:
        with open(outdir + '/struct.' + obj + '.rst', 'w') as t_file:
            t_file.write(obj + "\n" + "=" * len(obj) + "\n\n" + ".. doxygenstruct:: " + obj +" \n  :project: " + project)

def _generate_doxygen_rst(xmldir, outdir):
    """Autogenerate doxygen docs in the designated outdir folder"""
    structs = []
    files = os.listdir(os.path.join(os.path.dirname(__file__), xmldir))
    for file_name in files:
        if 'struct' in file_name and '__' not in file_name:
            structs.append(file_name
            .replace('struct_', '')
            .replace('_', ' ')
            .replace('.xml','')
            .title()
            .replace(' ', ''))
    _generate_structs(outdir, structs, breathe_default_project)

def generate_doxygen(app):
    DOXYGEN_XML_DIR = breathe_projects[breathe_default_project]
    _generate_doxygen_rst(DOXYGEN_XML_DIR, app.builder.srcdir + '/api')

# -- Options for sitemap extension

sitemap_url_scheme = '/stable/{link}'

# The theme to use for pages.
html_theme = "sphinx_scylladb_theme"
html_theme_path = ["../.."]

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for the theme, see the
# documentation.
html_theme_options = {
    "conf_py_path": "docs/source/",
    "hide_edit_this_page_button": "false",
    "hide_feedback_buttons": "false",
    "github_issues_repository": "scylladb/cpp-rust-driver",
    "github_repository": "scylladb/cpp-rust-driver",
    "site_description": "API-compatible rewrite of scylladb/cpp-driver as a wrapper over ScyllaDB Rust driver.",
    "hide_version_dropdown": [],
    "zendesk_tag": "gq6ltsh3nfex3cnwfy4aj9",
    "versions_unstable": UNSTABLE_VERSIONS,
    "versions_deprecated": DEPRECATED_VERSIONS,
}

# Last updated format
html_last_updated_fmt = "%d %b %Y"

# Custom sidebar templates, maps document names to template names.
html_sidebars = {"**": ["side-nav.html"]}

# Output file base name for HTML help builder.
htmlhelp_basename = "ScyllaDocumentationdoc"

# URL which points to the root of the HTML documentation.
html_baseurl = 'https://cpp-rust-driver.docs.scylladb.com'

# Dictionary of values to pass into the template engineâ€™s context for all pages
html_context = {"html_baseurl": html_baseurl}

# -- Initialize Sphinx ----------------------------------------------

def replace_relative_links(app, docname, source):
    result = source[0]
    for item in app.config.replacements:
        for key, value in item.items():
            result = re.sub(key, value, result)
    source[0] = result

def setup(sphinx):
    warnings.filterwarnings(
        action="ignore",
        category=UserWarning,
        message=r".*Container node skipped.*",
    )

    # Workaround to replace DataStax links
    replacements = [
        {"http://datastax.github.io/cpp-driver/api/cassandra.h/": "https://cpp-rust-driver.docs.scylladb.com/" + smv_latest_version + "/api"},
        {"http://datastax.github.io/cpp-driver": "https://cpp-rust-driver.docs.scylladb.com/" + smv_latest_version},
        {"http://docs.datastax.com/en/developer/cpp-driver/latest": "https://cpp-rust-driver.docs.scylladb.com/" + smv_latest_version},
    ]
    sphinx.add_config_value('replacements', replacements, True)
    sphinx.connect('source-read', replace_relative_links)

    # Autogenerate API Reference
    sphinx.connect("builder-inited", generate_doxygen)
